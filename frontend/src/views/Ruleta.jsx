import React, { useState } from 'react';
import { motion } from 'framer-motion';

const staticElements = (
  <>
    <path d="M764.988 382.482C764.988 593.732 593.747 765 382.512 765C171.277 765 0 593.732 0 382.482C0 171.231 161.413 9.98662 364.181 0.41662C370.247 0.159296 376.386 0 382.512 0C388.639 0 394.741 0.122535 400.819 0.41662C603.55 9.98662 765 177.37 765 382.482H764.988Z" fill="url(#paint0_linear_57_1361)"/>
    <path d="M382.5 759.081C590.48 759.081 759.082 590.477 759.082 382.494C759.082 174.51 590.48 5.90612 382.5 5.90612C174.52 5.90612 5.91837 174.51 5.91837 382.494C5.91837 590.477 174.52 759.081 382.5 759.081Z" fill="url(#paint1_linear_57_1361)"/>
    <path d="M382.5 707.2C561.827 707.2 707.201 561.824 707.201 382.494C707.201 203.164 561.827 57.7877 382.5 57.7877C203.173 57.7877 57.799 203.164 57.799 382.494C57.799 561.824 203.173 707.2 382.5 707.2Z" fill="url(#paint2_linear_57_1361)"/>
    <path style={{mixBlendMode: 'multiply'}}  d="M382.5 701.061C558.437 701.061 701.062 558.434 701.062 382.494C701.062 206.554 558.437 63.9266 382.5 63.9266C206.563 63.9266 63.9379 206.554 63.9379 382.494C63.9379 558.434 206.563 701.061 382.5 701.061Z" fill="url(#paint4_radial_57_1361)"/>
    <path style={{mixBlendMode: 'multiply', opacity: 0.6}} d="M373.702 450.685C405.833 450.685 431.881 424.637 431.881 392.505C431.881 360.373 405.833 334.325 373.702 334.325C341.571 334.325 315.523 360.373 315.523 392.505C315.523 424.637 341.571 450.685 373.702 450.685Z" fill="url(#paint5_radial_57_1361)"/>
    <path d="M413.557 413.539C430.707 396.388 430.707 368.582 413.557 351.432C396.407 334.281 368.601 334.281 351.451 351.432C334.301 368.582 334.301 396.388 351.451 413.539C368.601 430.689 396.407 430.689 413.557 413.539Z" fill="url(#paint6_linear_57_1361)"/>
    <path d="M412.562 407.962C426.605 391.362 424.532 366.521 407.932 352.477C391.332 338.434 366.491 340.507 352.448 357.107C338.405 373.708 340.478 398.549 357.078 412.592C373.678 426.636 398.519 424.563 412.562 407.962Z" fill="url(#paint7_linear_57_1361)"/>
    <path d="M405.058 363.14C405.058 361.804 403.968 360.726 402.645 360.726H392.964C391.629 360.726 390.55 361.816 390.55 363.14C390.55 364.463 391.641 365.554 392.964 365.554H402.645C403.98 365.554 405.058 364.463 405.058 363.14Z" fill="white"/>
    <path d="M359.513 365.554H383.284C384.62 365.554 385.698 364.463 385.698 363.14C385.698 361.816 384.608 360.726 383.284 360.726H372.514C367.441 360.934 363.103 362.539 359.513 365.566V365.554Z" fill="white"/>
    <path d="M390.538 382.488C390.538 383.823 391.617 384.902 392.952 384.902C394.288 384.902 395.366 383.823 395.366 382.488C395.366 381.152 394.288 380.074 392.952 380.074C391.617 380.074 390.538 381.152 390.538 382.488Z" fill="white"/>
    <path d="M397.878 370.394H388.063C386.764 370.394 385.71 371.447 385.71 372.746V372.881C385.71 374.18 386.764 375.234 388.063 375.234H397.878C399.177 375.234 400.231 374.18 400.231 372.881V372.746C400.231 371.447 399.177 370.394 397.878 370.394Z" fill="white"/>
    <path d="M380.87 401.836C380.87 400.5 379.78 399.422 378.456 399.422H359.55C363.14 402.448 367.465 404.053 372.526 404.262H378.456C379.792 404.262 380.87 403.171 380.87 401.848V401.836Z" fill="white"/>
    <path d="M402.644 404.25C403.978 404.25 405.058 403.169 405.058 401.836C405.058 400.502 403.978 399.422 402.644 399.422C401.311 399.422 400.231 400.502 400.231 401.836C400.231 403.169 401.311 404.25 402.644 404.25Z" fill="white"/>
    <path d="M388.124 399.41C386.789 399.41 385.71 400.5 385.71 401.824C385.71 403.147 386.801 404.237 388.124 404.237H392.964C394.3 404.237 395.378 403.147 395.378 401.824C395.378 400.5 394.288 399.41 392.964 399.41H388.124Z" fill="white"/>
    <path d="M397.804 394.582C399.14 394.582 400.218 393.491 400.218 392.168C400.218 390.844 399.128 389.754 397.804 389.754H352.933C353.496 391.469 354.256 393.087 355.249 394.594H397.804V394.582Z" fill="white"/>
    <path d="M385.71 382.488C385.71 381.152 384.62 380.074 383.296 380.074H351.952C351.879 380.858 351.842 381.667 351.842 382.488C351.842 383.309 351.879 384.117 351.952 384.902H383.296C384.632 384.902 385.71 383.811 385.71 382.488Z" fill="white"/>
    <path d="M378.444 375.234C379.78 375.234 380.858 374.143 380.858 372.82C380.858 371.496 379.768 370.406 378.444 370.406H355.224C354.244 371.913 353.484 373.53 352.92 375.246H378.444V375.234Z" fill="white"/>
    <path d="M382.488 5.90612C174.5 5.90612 5.9061 174.512 5.9061 382.488C5.9061 590.463 174.5 759.069 382.488 759.069C590.476 759.069 759.069 590.463 759.069 382.488C759.069 174.512 590.463 5.90612 382.488 5.90612ZM382.488 707.189C203.16 707.189 57.7867 561.815 57.7867 382.488C57.7867 218.477 179.376 82.8815 337.334 60.8991L382.684 106.261L427.997 60.9481C585.783 83.0776 707.189 218.599 707.189 382.488C707.189 561.815 561.815 707.189 382.488 707.189Z" fill="url(#paint8_linear_57_1361)"/>
  </>
);

const rouletteElements = (
  <>
    <path d="M607.753 607.751C637.467 578.036 660.063 543.922 675.575 507.492L382.5 382.494L507.496 675.574C543.913 660.049 578.039 637.453 607.753 607.751Z" fill="url(#paint3_linear_57_1361)"/>
    <path d="M157.247 607.751C186.961 637.465 221.075 660.061 257.504 675.574L382.5 382.494L89.4248 507.492C104.95 543.91 127.545 578.036 157.247 607.751Z" fill="#33C466"/>
    <path d="M157.247 157.237C127.533 186.952 104.938 221.066 89.4248 257.496L382.5 382.494L257.504 89.414C221.087 104.939 186.961 127.535 157.247 157.237Z" fill="#FF3366"/>
    <path d="M607.753 157.237C578.039 127.522 543.925 104.927 507.496 89.414L382.5 382.494L675.575 257.496C660.05 221.078 637.455 186.952 607.753 157.237Z" fill="#33C466"/>
    <path d="M669.436 521.02C689.691 479.138 701.05 432.145 701.05 382.494C701.05 332.843 689.691 285.85 669.436 243.968C671.593 248.44 673.639 252.95 675.575 257.483L382.5 382.482L675.575 507.48C673.639 512.026 671.593 516.535 669.436 521.008V521.02Z" fill="#25B1E1"/>
    <path d="M95.5515 243.968C75.2968 285.85 63.9379 332.843 63.9379 382.494C63.9379 432.145 75.2968 479.125 95.5515 521.02C93.3949 516.548 91.3486 512.038 89.4126 507.504L382.488 382.506L89.4126 257.508C91.3486 252.962 93.3949 248.453 95.5515 243.992V243.968Z" fill="#25B1E1"/>
    <path d="M521.012 95.5407C479.13 75.2857 432.138 63.9266 382.488 63.9266C332.837 63.9266 285.846 75.2857 243.964 95.5407C248.436 93.3841 252.946 91.3378 257.479 89.4017L382.476 382.482L507.472 89.4017C512.018 91.3378 516.527 93.3841 520.987 95.5407H521.012Z" fill="#FFC433"/>
    <path d="M507.496 675.574L382.5 382.494L257.504 675.574C252.958 673.638 248.449 671.591 243.976 669.435C285.858 689.69 332.849 701.061 382.5 701.061C432.151 701.061 479.142 689.702 521.024 669.447C516.551 671.604 512.042 673.65 507.508 675.586L507.496 675.574Z" fill="#FFC433"/>
    <path d="M111.185 373V350.696H116.209V373H111.185ZM119.997 373V350.696H125.117L134.845 366.408H133.533V350.696H138.557V373H133.405L123.741 357.256H125.021V373H119.997ZM147.237 373V355.176H140.709V350.696H158.821V355.176H152.325V373H147.237ZM160.966 373V350.696H175.942V355.176H165.99V359.272H175.462V363.752H165.99V368.52H175.942V373H160.966ZM179.31 373V350.696H184.43L194.158 366.408H192.846V350.696H197.87V373H192.718L183.054 357.256H184.334V373H179.31ZM206.55 373V355.176H200.022V350.696H218.134V355.176H211.638V373H206.55ZM215.486 373L224.766 350.696H228.446L237.694 373H232.222L226.622 358.184L220.958 373H215.486ZM222.142 369.224L223.71 364.744H229.502L231.134 369.224H222.142ZM239.654 373V350.696H244.678V368.52H253.83V373H239.654ZM265.733 373.576C263.578 373.576 261.68 373.085 260.037 372.104C258.394 371.123 257.114 369.757 256.197 368.008C255.28 366.237 254.821 364.189 254.821 361.864C254.821 359.517 255.28 357.469 256.197 355.72C257.114 353.949 258.394 352.573 260.037 351.592C261.68 350.611 263.578 350.12 265.733 350.12C267.909 350.12 269.818 350.611 271.461 351.592C273.104 352.552 274.384 353.917 275.301 355.688C276.218 357.437 276.677 359.496 276.677 361.864C276.677 364.211 276.208 366.269 275.269 368.04C274.352 369.789 273.072 371.155 271.429 372.136C269.786 373.096 267.888 373.576 265.733 373.576ZM265.733 368.776C266.949 368.776 267.994 368.499 268.869 367.944C269.744 367.368 270.416 366.568 270.885 365.544C271.376 364.499 271.621 363.272 271.621 361.864C271.621 360.435 271.376 359.208 270.885 358.184C270.416 357.139 269.744 356.339 268.869 355.784C267.994 355.208 266.949 354.92 265.733 354.92C264.538 354.92 263.493 355.197 262.597 355.752C261.722 356.307 261.04 357.107 260.549 358.152C260.08 359.176 259.845 360.413 259.845 361.864C259.845 363.293 260.08 364.531 260.549 365.576C261.04 366.6 261.722 367.389 262.597 367.944C263.493 368.499 264.538 368.776 265.733 368.776ZM91.1536 412V389.696H96.2736L106.002 405.408H104.69V389.696H109.714V412H104.562L94.8976 396.256H96.1776V412H91.1536ZM122.137 412.576C119.215 412.576 117.007 411.861 115.513 410.432C114.041 409.003 113.305 406.837 113.305 403.936V389.696H118.329V403.36C118.329 404.384 118.415 405.237 118.585 405.92C118.777 406.603 119.151 407.115 119.705 407.456C120.26 407.797 121.071 407.968 122.137 407.968C123.204 407.968 124.004 407.797 124.537 407.456C125.092 407.115 125.465 406.613 125.657 405.952C125.849 405.269 125.945 404.427 125.945 403.424V389.696H130.969V403.776C130.969 406.741 130.223 408.949 128.729 410.4C127.257 411.851 125.06 412.576 122.137 412.576ZM134.56 412V389.696H149.536V394.176H139.584V398.272H149.056V402.752H139.584V407.52H149.536V412H134.56ZM160.104 412L151.112 389.696H156.648L162.792 405.824H161.16L167.176 389.696H172.744L163.784 412H160.104ZM170.017 412L179.297 389.696H182.977L192.225 412H186.753L181.153 397.184L175.489 412H170.017ZM176.673 408.224L178.241 403.744H184.033L185.665 408.224H176.673ZM194.185 412V389.696H201.513L206.633 404.928H205.737L210.857 389.696H218.185V412H213.161V395.584L213.641 395.68L208.617 409.984H203.753L198.729 395.68L199.209 395.584V412H194.185ZM221.966 412V389.696H236.942V394.176H226.99V398.272H236.462V402.752H226.99V407.52H236.942V412H221.966ZM240.31 412V389.696H245.43L255.158 405.408H253.846V389.696H258.87V412H253.718L244.054 396.256H245.334V412H240.31ZM267.55 412V394.176H261.022V389.696H279.134V394.176H272.638V412H267.55ZM281.279 412V389.696H296.255V394.176H286.303V398.272H295.775V402.752H286.303V407.52H296.255V412H281.279Z" fill="white"/>
  </>
);

const defs = (
  <defs>
    <linearGradient id="paint0_linear_57_1361" x1="0" y1="382.494" x2="764.988" y2="382.494" gradientUnits="userSpaceOnUse">
    <stop stop-color="#E84564"/>
    <stop offset="0.39" stop-color="#FBC136"/>
    <stop offset="0.7" stop-color="#4EB066"/>
    <stop offset="1" stop-color="#25AFDF"/>
    </linearGradient>
    <linearGradient id="paint1_linear_57_1361" x1="638.595" y1="126.383" x2="97.5769" y2="667.404" gradientUnits="userSpaceOnUse">
    <stop stop-color="#000604"/>
    <stop offset="0.4" stop-color="#303030"/>
    <stop offset="1" stop-color="#000604"/>
    </linearGradient>
    <linearGradient id="paint2_linear_57_1361" x1="167.001" y1="166.991" x2="591.916" y2="591.9" gradientUnits="userSpaceOnUse">
    <stop stop-color="#25AFDF"/>
    <stop offset="0.33" stop-color="#4EB066"/>
    <stop offset="0.65" stop-color="#FBC136"/>
    <stop offset="1" stop-color="#E84564"/>
    </linearGradient>
    <linearGradient id="paint3_linear_57_1361" x1="609.358" y1="609.356" x2="411.709" y2="411.709" gradientUnits="userSpaceOnUse">
    <stop stop-color="#CC0A60"/>
    <stop offset="0.48" stop-color="#E60C69"/>
    <stop offset="1" stop-color="#FE0E73"/>
    </linearGradient>
    <radialGradient id="paint4_radial_57_1361" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(382.5 382.494) scale(318.562 318.567)">
    <stop offset="0.81" stop-color="white"/>
    <stop offset="0.87" stop-color="#FCFCFD"/>
    <stop offset="0.91" stop-color="#F3F4F6"/>
    <stop offset="0.94" stop-color="#E9ECF0"/>
    <stop offset="0.97" stop-color="#B9C3CE"/>
    <stop offset="1" stop-color="#899BAD"/>
    </radialGradient>
    <radialGradient id="paint5_radial_57_1361" cx="0" cy="0" r="1" gradientUnits="userSpaceOnUse" gradientTransform="translate(373.702 392.505) scale(58.1788 58.1797)">
    <stop offset="0.63" stop-color="#662E29"/>
    <stop offset="0.66" stop-color="#75423E"/>
    <stop offset="0.78" stop-color="#AF9290"/>
    <stop offset="0.88" stop-color="#DACDCB"/>
    <stop offset="0.96" stop-color="#F4F1F0"/>
    <stop offset="1" stop-color="white"/>
    </radialGradient>
    <linearGradient id="paint6_linear_57_1361" x1="354.065" y1="354.039" x2="420.614" y2="420.598" gradientUnits="userSpaceOnUse">
    <stop stop-color="#25AFDF"/>
    <stop offset="0.33" stop-color="#4EB066"/>
    <stop offset="0.65" stop-color="#FBC136"/>
    <stop offset="1" stop-color="#E84564"/>
    </linearGradient>
    <linearGradient id="paint7_linear_57_1361" x1="415.17" y1="349.861" x2="335.756" y2="429.274" gradientUnits="userSpaceOnUse">
    <stop offset="0.28" stop-color="#303030"/>
    <stop offset="1" stop-color="#000604"/>
    </linearGradient>
    <linearGradient id="paint8_linear_57_1361" x1="116.211" y1="116.198" x2="648.777" y2="648.765" gradientUnits="userSpaceOnUse">
    <stop stop-color="#000604"/>
    <stop offset="0.4" stop-color="#303030"/>
    <stop offset="1" stop-color="#000604"/>
    </linearGradient>
  </defs>
);

const Ruleta = () => {
    // Definimos los segmentos de la ruleta.
    const segments = [
      { name: 'Premio 1', color: '#33C466' },
      { name: 'Premio 2', color: '#FF3366' },
      { name: 'Premio 3', color: '#FFC433' },
      { name: 'Premio 4', color: '#25B1E1' },
      { name: 'Premio 5', color: '#33C466' },
      { name: 'Premio 6', color: '#FF3366' },
      { name: 'Premio 7', color: '#FFC433' },
      { name: 'Intentalo Nuevamente ', color: '#25B1E1' },
    ];
    
    const anglePerSegment = 360 / segments.length;
    
    const [rotation, setRotation] = useState(0);
    const [isSpinning, setIsSpinning] = useState(false);
    const [result, setResult] = useState(null);

    const spin = () => {
      if (isSpinning) return;
      setIsSpinning(true);
      setResult(null);

      const randomIndex = Math.floor(Math.random() * segments.length);
      const chosenSegment = segments[randomIndex];

      // Ajusta el ángulo final para que el puntero apunte al centro del segmento.
      // El 25% es un ajuste para centrar el puntero. Puedes ajustarlo.
      const targetAngle = 3600 + (randomIndex * anglePerSegment) + (anglePerSegment / 2);

      setRotation(targetAngle);

      setTimeout(() => {
        setIsSpinning(false);
        setResult(chosenSegment.name);
      }, 3500); 
    };

    return (
    <div style={{ position: 'relative', width: 765, height: 765, margin: '0 auto' }}>

      {/* 1. Capa Inferior: La Ruleta que Gira */}
      <svg
        width="100%"
        height="100%"
        viewBox="0 0 765 765"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style={{ position: 'absolute', zIndex: 1 }}
      >
        {defs}
        <motion.g animate={{ rotate: rotation }} transition={{ duration: 3, ease: 'easeOut' }}>
          {rouletteElements}
        </motion.g>
      </svg>

      {/* 2. Capa Intermedia: El Centro Estático */}
      <svg
        width="100%"
        height="100%"
        viewBox="0 0 765 765"
        fill="none"
        xmlns="http://www.w3.org/2000/svg"
        style={{ position: 'absolute', zIndex: 2 }}
      >
        {staticElements}
      </svg>

      {/* 3. Capa Superior: El Puntero y el Botón */}
      <div style={{ position: 'absolute', width: '100%', height: '100%', top: 0, left: 0, zIndex: 3 }}>
        <svg
          width="100%"
          height="100%"
          viewBox="0 0 765 765"
          style={{ position: 'absolute', zIndex: 3 }}
        >
          <polygon points="382.5,20 402.5,60 362.5,60" fill="black" />
        </svg>

        <button
          onClick={spin}
          disabled={isSpinning}
          style={{ position: 'absolute', bottom: 50, left: '50%', transform: 'translateX(-50%)', zIndex: 4 }}
        >
          {isSpinning ? 'Girando...' : 'Girar'}
        </button>
      </div>

      {result && (
        <div style={{ marginTop: '780px', textAlign: 'center' }}>
          <h2>¡Ha caído en: {result}!</h2>
        </div>
      )}
    </div>
  );
};

export default Ruleta;